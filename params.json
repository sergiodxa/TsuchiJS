{"name":"Tsuchijs","tagline":"Promised based wrapper for the browser Notification API made in ECMAScript 6","body":"# TsuchiJS\r\nPromised based wrapper for the browser's Notification API made in ECMAScript 6.\r\n\r\n## How to use:\r\nLoad the library:\r\n\r\n```javascript\r\nimport tsuchi from 'tsuchijs';\r\n```\r\n\r\nThen you can verify the compatibility, ask permission and send a notification:\r\n\r\n```javascript\r\n// check support\r\ntsuchi.checkSupport()\r\n  .then(() => {\r\n    // then verify and ask for permissions\r\n    tsuchi.verifyPermission()\r\n      .then(() => {\r\n        // then send the notification\r\n        tsuchi.sendNotification('hola mundo', {\r\n          body: 'hola mundo ¿todo bien?',\r\n        }).then(notification => {\r\n          // then you can listen the for events (show, click, close, error) of the notifications\r\n          notification.on('show').then((e) => {\r\n            // do something when the notification is showed\r\n          });\r\n        }).catch(error => console.log(error) );\r\n      })\r\n      .catch(error => console.log(error) );\r\n  })\r\n  .catch(error => {\r\n    console.log(error);\r\n  })\r\n```\r\n\r\n## Methods\r\nAll methods return a promise.\r\n\r\n### tsuchi.checkSupport()\r\nThis methods check if the browser support notifications.\r\n\r\n### tsuchi.verifyPermission()\r\nThis method verify if you has permissions to use notifications, if you never asked for permission ask the user.\r\n\r\n### tsuchi.sendNotification()\r\nThis method receive a string with the title of the notification and an object who can has the following attributes:\r\n```json\r\n{\r\n  \"body\": \"A string representing an extra content to display within the notification\",\r\n  \"dir\" : \"The direction of the notification; it can be auto, ltr, or rtl\",\r\n  \"icon\": \"The URL of an image to be used as an icon by the notification\",\r\n  \"lang\": \"Specify the lang used within the notification. This string must be a valid BCP 47 language tag.\",\r\n  \"tag\" : \"An ID for a given notification that allows to retrieve, replace or remove it if necessary\"\r\n}\r\n```\r\nIf there wasn't any problem with the notification you can execute the then callback who receive the notification object with the methods on and off who are a promised addEventListener and removeEventListener.\r\n\r\n## License\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2015 Sergio Daniel Xalambrí\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","google":"UA-48432002-3","note":"Don't delete this file! It's used internally to help with page regeneration."}